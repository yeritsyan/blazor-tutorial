@page "/editgame"

<PageTitle>Edit Game</PageTitle>

<h3>New Game</h3>

@if(genres is null){
  <p>Loading genres...</p>
}
else{
  <div class="row">
    <div class="col-md-4">
      <EditForm Model="@game" FormName="editGame">
        <div class="mb-3">
          <label for="nameInput" class="form-label">Name:</label>
          <InputText id="nameInput" class="form-control" @bind-Value="@game.Name" />
        </div>
        <div class="mb-3">
          <label for="genreInput" class="form-label">Genre:</label>
          <InputSelect id="genreInput" class="form-select" @bind-Value="@game.GenreId">
            <option value="">Select Genre</option>
            @if (genres != null)
            {
                foreach (var genre in genres)
                {
                    <option value="@genre.Id">@genre.Name</option>
                }
            }
          </InputSelect>
        </div>
        <div class="mb-3">
          <label for="priceInput" class="form-label">Price:</label>
          <InputNumber id="priceInput" class="form-control" @bind-Value="@game.Price" />
        </div>
        <div class="mb-3">
          <label for="releaseDateInput" class="form-label">Release Date:</label>
          <InputDate id="releaseDateInput" class="form-control" @bind-Value="@game.ReleaseDate" />
        </div>
      </EditForm>
    </div>
  </div>
}

@code {
    private GameDetails game { get; set; } = new(){
        Name = string.Empty,
        ReleaseDate = DateOnly.FromDateTime(DateTime.Now),
    };

    private GenresClient _genresClient = new();

    private Genre[]? genres;

    protected override void OnInitialized()
    {
        // Simulate fetching genres from the client
        genres = _genresClient.GetGenres().ToArray();
    }
}
